---
- name:             Prepare system - Install dependencies
  become:           yes
  package:
    name:           "{{ item }}"
    state:          present
  with_items:
    - docker

- name:             Prepare system - Get {{ item }}
  get_url:
    url:            "{{ item }}"
    dest:           "{{ temp_dir }}"
    validate_certs: false
    mode:           0440
  ignore_errors:    True
  with_items:
    - https://bootstrap.pypa.io/get-pip.py
  register:         pip_state

- name:             Upload {{ item }}
  copy:
    src:            "{{ item }}"
    dest:           {{ temp_dir }}
  with_items:
    - get-pip.py
  when:             pip_state | failed

- name:             Install pip
  command:          python get-pip.py
  args:
    chdir:          "{{ temp_dir }}/get-pip.py"

- name:             Install docker-py
  become:           yes
  pip:
    name:           docker-py

# TODO:             name and images as list of items
- name:             Create container
  become:           yes
  docker_container:
    name:           test_ansible
    image:          "{{ item }}"
    volumes:        /data
  with_items:
    - "{{ images_tested }}"
  register:         docker_inspect

- debug:            msg="{{ docker_inspect }}"

- name:             Get binaries
  become:           yes
  docker_container:
    name:           test_ansible
    state:          present
    command:        dpkg -l | grep apt
  ignore_errors:    true
  when:             ansible_os_family == 'Debian'

- name:             Remove container information
  become:           yes
  docker_container:
    name:           test_ansible
    state:          present
    command:        rm /etc/os-release
  when:             ansible_os_family == 'Debian'





# TODO : listen syscalls denied to conatiner capabilites (when: dcoker_inspect.Args
# ==privileged)
# TODO:             Get binaries installed container (from Docker image)
