---
#- name:           Prepare system - Update
#  command:        yum update

#- name:            Prepare system - Update
#  become:          yes
#  package:
#    name:          *
#    state:         latest

# - name:          Prepare system - Install dependencies
#   become:        yes
#   command:       "yum install -y {{ item }}"
#   with_items:
#     - "{{ packages_rhel }}"
#   when:          ansible_os_family == 'RedHat'

- set_fact:
    packages:      "{{ packages_rhel }}"
  when:            ansible_os_family == 'RedHat'

- set_fact:
    packages:      "{{ packages_deb }}"
  when:            ansible_os_family == 'Debian' or ansible_os_family == 'Ubuntu'

- name:            Prepare system - Install dependencies
  become:          yes
  package:
    name:          "{{ item }}"
    state:         present
  with_items:
    - "{{ packages }}"

- name:            Prepare system - Clear files in /boot
  become:          yes
  command:         rm -rf /boot/*

- name:            Prepare system - Check internet
  get_url:
    url:           https://www.archlinux.org/
    dest:          "{{ temp_dir }}"
  register:        connection

- name:            Prepare source code - Get {{ item }}
  get_url:
    url:         "{{ item }}"
    dest:        "{{ temp_dir }}"
    mode:        0440
  ignore_errors: True
  with_items:
    - "https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-{{ kernel_version }}.tar.xz"
    - "https://grsecurity.net/~paxguy1/pax-linux-{{ kernel_version }}.24-test7.patch"
  when:            connection|succeeded

- name:            Prepare source code - Decompress kernel code
  unarchive:
    src:           "{{ temp_dir }}/linux-{{ kernel_version }}.tar.xz"
    dest:          "{{ temp_dir }}"
    remote_src:    True
    creates:       no

- name:            Prepare source code - Copy templates kernel config
  template:
    src:           "{{ item.src }}"
    dest:          "{{ item.dest }}"
    mode:          0644
  with_items:
    - {"src": "kernel.config.j2", "dest": "{{ temp_dir }}/linux-{{ kernel_version }}/.config"}

- name: Prepare source code - Patch with GrSecurity set
  patch:
    src: "{{ temp_dir }}/pax-linux-{{ kernel_version }}.24-test7.patch"
    dest: "{{ temp_dir }}/linux-{{ kernel_version }}"

- name:            Prepare source code - Make config
  make:
    target:        silentoldconfig
    chdir:         "{{ temp_dir }}/linux-{{ kernel_version }}/.config"

- set_fact:
    type_binary:   rpm
  when:            ansible_os_family == 'RedHat'

- set_fact:
    type_binary:   deb
  when:            ansible_os_family == 'Debian' or ansible_os_family == 'Ubuntu'

- name:            Compile kernel - Create binary
  make:
    target:        "{{ type_binary }}"
    chdir:         "{{ temp_dir }}/linux-{{ kernel_version }}/.config"
  when:            ansible_os_family == 'RedHat'



#- name:           Compile kernel 1
#  command:        make bzImage
#  args:
#    chdir:        "linux-{{ kernel_version }}"
#
#- name:           Compile kernel 2
#  command:        make modules
#  args:
#    chdir:        "linux-{{ kernel_version }}"
#
#- name:           Compile kernel 3
#  command:        make
#  args:
#    chdir:        "linux-{{ kernel_version }}"
#
#- name:           Compile kernel 4
#  command:        make install
#  args:
#    chdir:        "linux-{{ kernel_version }}"
#
#- name:           Compile kernel 5
#  command:        make modules_install
#  args:
#    chdir:        "linux-{{ kernel_version }}"

# TODO:
#mv /boot/vmlinuz /boot/vmlinuz-4.7-custom
#mkinitrd /boot/initrd-4.7-custom.img /boot/vmlinuz-4.7-custom
#Edit /etc/default/grub and add or change the
